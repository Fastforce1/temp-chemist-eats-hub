{"version":3,"file":"Settings-DSY-Qx4n.js","sources":["../../../src/pages/Settings.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Bell,\r\n  User,\r\n  Lock,\r\n  Globe,\r\n  Activity,\r\n  Database,\r\n  ToggleLeft,\r\n  ChevronRight,\r\n  Smartphone,\r\n  Scale,\r\n} from 'lucide-react';\r\n\r\ninterface SettingsSection {\r\n  id: string;\r\n  title: string;\r\n  icon: React.ReactNode;\r\n  items: SettingsItem[];\r\n}\r\n\r\ninterface SettingsItem {\r\n  id: string;\r\n  label: string;\r\n  type: 'toggle' | 'select' | 'link' | 'button';\r\n  value?: boolean | string;\r\n  options?: string[];\r\n  description?: string;\r\n}\r\n\r\nconst Settings: React.FC = () => {\r\n  const [settings, setSettings] = useState({\r\n    notifications: {\r\n      mealReminders: true,\r\n      supplementReminders: true,\r\n      progressUpdates: false,\r\n      newsletterUpdates: true,\r\n    },\r\n    units: {\r\n      weight: 'lbs',\r\n      height: 'ft/in',\r\n      energy: 'calories',\r\n    },\r\n    privacy: {\r\n      shareProgress: false,\r\n      publicProfile: true,\r\n    },\r\n    devices: {\r\n      fitbitConnected: true,\r\n      appleHealthConnected: false,\r\n    },\r\n  });\r\n\r\n  const settingsSections: SettingsSection[] = [\r\n    {\r\n      id: 'notifications',\r\n      title: 'Notifications',\r\n      icon: <Bell className=\"w-5 h-5\" />,\r\n      items: [\r\n        {\r\n          id: 'mealReminders',\r\n          label: 'Meal Reminders',\r\n          type: 'toggle',\r\n          value: settings.notifications.mealReminders,\r\n          description: 'Get reminded to log your meals',\r\n        },\r\n        {\r\n          id: 'supplementReminders',\r\n          label: 'Supplement Reminders',\r\n          type: 'toggle',\r\n          value: settings.notifications.supplementReminders,\r\n          description: 'Get reminded to take your supplements',\r\n        },\r\n        {\r\n          id: 'progressUpdates',\r\n          label: 'Progress Updates',\r\n          type: 'toggle',\r\n          value: settings.notifications.progressUpdates,\r\n          description: 'Weekly progress report notifications',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 'account',\r\n      title: 'Account',\r\n      icon: <User className=\"w-5 h-5\" />,\r\n      items: [\r\n        {\r\n          id: 'profile',\r\n          label: 'Profile Information',\r\n          type: 'link',\r\n          description: 'Update your personal information',\r\n        },\r\n        {\r\n          id: 'password',\r\n          label: 'Password',\r\n          type: 'link',\r\n          description: 'Change your password',\r\n        },\r\n        {\r\n          id: 'email',\r\n          label: 'Email Preferences',\r\n          type: 'link',\r\n          description: 'Manage email notifications',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 'privacy',\r\n      title: 'Privacy',\r\n      icon: <Lock className=\"w-5 h-5\" />,\r\n      items: [\r\n        {\r\n          id: 'shareProgress',\r\n          label: 'Share Progress',\r\n          type: 'toggle',\r\n          value: settings.privacy.shareProgress,\r\n          description: 'Allow sharing progress with community',\r\n        },\r\n        {\r\n          id: 'publicProfile',\r\n          label: 'Public Profile',\r\n          type: 'toggle',\r\n          value: settings.privacy.publicProfile,\r\n          description: 'Make your profile visible to others',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 'units',\r\n      title: 'Units & Measurements',\r\n      icon: <Scale className=\"w-5 h-5\" />,\r\n      items: [\r\n        {\r\n          id: 'weight',\r\n          label: 'Weight Unit',\r\n          type: 'select',\r\n          value: settings.units.weight,\r\n          options: ['lbs', 'kg'],\r\n          description: 'Choose your preferred weight unit',\r\n        },\r\n        {\r\n          id: 'energy',\r\n          label: 'Energy Unit',\r\n          type: 'select',\r\n          value: settings.units.energy,\r\n          options: ['calories', 'kilojoules'],\r\n          description: 'Choose your preferred energy unit',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 'devices',\r\n      title: 'Connected Devices',\r\n      icon: <Smartphone className=\"w-5 h-5\" />,\r\n      items: [\r\n        {\r\n          id: 'fitbit',\r\n          label: 'Fitbit',\r\n          type: 'toggle',\r\n          value: settings.devices.fitbitConnected,\r\n          description: 'Connected to Fitbit account',\r\n        },\r\n        {\r\n          id: 'appleHealth',\r\n          label: 'Apple Health',\r\n          type: 'toggle',\r\n          value: settings.devices.appleHealthConnected,\r\n          description: 'Connected to Apple Health',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 'data',\r\n      title: 'Data Management',\r\n      icon: <Database className=\"w-5 h-5\" />,\r\n      items: [\r\n        {\r\n          id: 'export',\r\n          label: 'Export Data',\r\n          type: 'button',\r\n          description: 'Download all your data',\r\n        },\r\n        {\r\n          id: 'delete',\r\n          label: 'Delete Account',\r\n          type: 'button',\r\n          description: 'Permanently delete your account',\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const handleToggle = (sectionId: string, itemId: string) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      [sectionId]: {\r\n        ...prev[sectionId as keyof typeof prev],\r\n        [itemId]: !prev[sectionId as keyof typeof prev][itemId as keyof typeof prev[keyof typeof prev]],\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSelectChange = (sectionId: string, itemId: string, value: string) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      [sectionId]: {\r\n        ...prev[sectionId as keyof typeof prev],\r\n        [itemId]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto space-y-8\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Settings</h1>\r\n        <p className=\"mt-2 text-gray-600\">Manage your account settings and preferences</p>\r\n      </div>\r\n\r\n      <div className=\"space-y-6\">\r\n        {settingsSections.map(section => (\r\n          <div key={section.id} className=\"bg-white rounded-xl shadow-sm overflow-hidden\">\r\n            <div className=\"p-6\">\r\n              <div className=\"flex items-center mb-6\">\r\n                {section.icon}\r\n                <h2 className=\"ml-3 text-lg font-medium text-gray-900\">{section.title}</h2>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                {section.items.map(item => (\r\n                  <div key={item.id} className=\"flex items-center justify-between py-3\">\r\n                    <div className=\"flex-grow\">\r\n                      <div className=\"flex items-center\">\r\n                        <span className=\"text-sm font-medium text-gray-900\">{item.label}</span>\r\n                      </div>\r\n                      {item.description && (\r\n                        <p className=\"mt-1 text-sm text-gray-500\">{item.description}</p>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"ml-4\">\r\n                      {item.type === 'toggle' && (\r\n                        <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={item.value as boolean}\r\n                            onChange={() => handleToggle(section.id, item.id)}\r\n                            className=\"sr-only peer\"\r\n                          />\r\n                          <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                        </label>\r\n                      )}\r\n\r\n                      {item.type === 'select' && (\r\n                        <select\r\n                          value={item.value as string}\r\n                          onChange={(e) => handleSelectChange(section.id, item.id, e.target.value)}\r\n                          className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n                        >\r\n                          {item.options?.map(option => (\r\n                            <option key={option} value={option}>\r\n                              {option}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      )}\r\n\r\n                      {item.type === 'link' && (\r\n                        <button className=\"text-blue-600 hover:text-blue-700 font-medium flex items-center\">\r\n                          Manage\r\n                          <ChevronRight className=\"w-4 h-4 ml-1\" />\r\n                        </button>\r\n                      )}\r\n\r\n                      {item.type === 'button' && (\r\n                        <button\r\n                          className={`px-4 py-2 rounded-lg text-sm font-medium ${\r\n                            item.id === 'delete'\r\n                              ? 'text-red-600 hover:text-red-700'\r\n                              : 'text-blue-600 hover:text-blue-700'\r\n                          }`}\r\n                        >\r\n                          {item.label}\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings; "],"names":["Settings","settings","setSettings","useState","settingsSections","jsx","Bell","User","Lock","Scale","Smartphone","Database","handleToggle","sectionId","itemId","prev","handleSelectChange","value","jsxs","section","item","e","_a","option","ChevronRight"],"mappings":"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"}