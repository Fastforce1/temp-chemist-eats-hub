{"version":3,"file":"MealPlanner-CtYHMUaw.js","sources":["../../node_modules/lucide-react/dist/esm/icons/pen-square.js","../../node_modules/lucide-react/dist/esm/icons/trash-2.js","../../src/components/recipes/RecipeCard.tsx","../../src/components/meal-planner/WeekDateSelector.tsx","../../src/components/meal-planner/MealItem.tsx","../../src/components/meal-planner/EmptyMeal.tsx","../../src/components/meal-planner/MealSection.tsx","../../src/components/meal-planner/SnacksSection.tsx","../../src/components/meal-planner/NutritionSummary.tsx","../../src/components/meal-planner/AddMealForm.tsx","../../src/components/meal-planner/mealPlannerUtils.ts","../../src/pages/MealPlanner.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.300.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst PenSquare = createLucideIcon(\"PenSquare\", [\n  [\"path\", { d: \"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\", key: \"1qinfi\" }],\n  [\"path\", { d: \"M18.5 2.5a2.12 2.12 0 0 1 3 3L12 15l-4 1 1-4Z\", key: \"w2jsv5\" }]\n]);\n\nexport { PenSquare as default };\n//# sourceMappingURL=pen-square.js.map\n","/**\n * @license lucide-react v0.300.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Trash2 = createLucideIcon(\"Trash2\", [\n  [\"path\", { d: \"M3 6h18\", key: \"d0wm0j\" }],\n  [\"path\", { d: \"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\", key: \"4alrt4\" }],\n  [\"path\", { d: \"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\", key: \"v07s0e\" }],\n  [\"line\", { x1: \"10\", x2: \"10\", y1: \"11\", y2: \"17\", key: \"1uufr5\" }],\n  [\"line\", { x1: \"14\", x2: \"14\", y1: \"11\", y2: \"17\", key: \"xtxkd\" }]\n]);\n\nexport { Trash2 as default };\n//# sourceMappingURL=trash-2.js.map\n","import React from 'react';\r\nimport { Clock, Users, ChevronRight } from 'lucide-react';\r\nimport type { Recipe } from '../../types';\r\n\r\ninterface RecipeCardProps {\r\n  recipe: Recipe;\r\n  showNutrients?: boolean;\r\n  onSelect?: (recipe: Recipe) => void;\r\n}\r\n\r\nconst RecipeCard: React.FC<RecipeCardProps> = ({\r\n  recipe,\r\n  showNutrients = true,\r\n  onSelect\r\n}) => {\r\n  const {\r\n    name,\r\n    description,\r\n    prepTime,\r\n    cookTime,\r\n    servings,\r\n    nutrients,\r\n    image\r\n  } = recipe;\r\n\r\n  const totalTime = prepTime + cookTime;\r\n\r\n  return (\r\n    <div \r\n      className=\"bg-white rounded-xl shadow-sm overflow-hidden hover:shadow-md transition-shadow cursor-pointer\"\r\n      onClick={() => onSelect?.(recipe)}\r\n    >\r\n      <div className=\"relative h-48\">\r\n        <img\r\n          src={image || '/placeholder-recipe.jpg'}\r\n          alt={name}\r\n          className=\"w-full h-full object-cover\"\r\n        />\r\n        {showNutrients && (\r\n          <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/60 to-transparent p-4\">\r\n            <div className=\"flex justify-between text-white text-sm\">\r\n              <span>{nutrients.calories} kcal</span>\r\n              <span>{nutrients.protein}g protein</span>\r\n              <span>{nutrients.carbs}g carbs</span>\r\n              <span>{nutrients.fat}g fat</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"p-4\">\r\n        <div className=\"flex justify-between items-start\">\r\n          <div>\r\n            <h3 className=\"font-medium text-gray-900\">{name}</h3>\r\n            <p className=\"text-sm text-gray-500 mt-1 line-clamp-2\">\r\n              {description}\r\n            </p>\r\n          </div>\r\n          <ChevronRight className=\"w-5 h-5 text-gray-400 flex-shrink-0\" />\r\n        </div>\r\n\r\n        <div className=\"flex items-center mt-4 text-sm text-gray-500 space-x-4\">\r\n          <div className=\"flex items-center\">\r\n            <Clock className=\"w-4 h-4 mr-1\" />\r\n            <span>{totalTime} min</span>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <Users className=\"w-4 h-4 mr-1\" />\r\n            <span>{servings} servings</span>\r\n          </div>\r\n        </div>\r\n\r\n        {recipe.tags && recipe.tags.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-2 mt-3\">\r\n            {recipe.tags.map(tag => (\r\n              <span\r\n                key={tag}\r\n                className=\"px-2 py-1 bg-gray-100 text-gray-600 rounded-full text-xs\"\r\n              >\r\n                {tag}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCard; ","\r\nimport React from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\n\r\ninterface WeekDateSelectorProps {\r\n  weekDates: Date[];\r\n  currentDate: Date;\r\n  setCurrentDate: (date: Date) => void;\r\n  goToPreviousWeek: () => void;\r\n  goToNextWeek: () => void;\r\n}\r\n\r\nconst WeekDateSelector: React.FC<WeekDateSelectorProps> = ({\r\n  weekDates,\r\n  currentDate,\r\n  setCurrentDate,\r\n  goToPreviousWeek,\r\n  goToNextWeek\r\n}) => {\r\n  // Function to check if a date is today\r\n  const isToday = (date: Date) => {\r\n    const today = new Date();\r\n    return (\r\n      date.getDate() === today.getDate() &&\r\n      date.getMonth() === today.getMonth() &&\r\n      date.getFullYear() === today.getFullYear()\r\n    );\r\n  };\r\n\r\n  // Function to check if a date is the selected date\r\n  const isSelectedDate = (date: Date) => {\r\n    return (\r\n      date.getDate() === currentDate.getDate() &&\r\n      date.getMonth() === currentDate.getMonth() &&\r\n      date.getFullYear() === currentDate.getFullYear()\r\n    );\r\n  };\r\n\r\n  // Function to format date as day of week and date\r\n  const formatDate = (date: Date) => {\r\n    const options: Intl.DateTimeFormatOptions = { weekday: 'short' };\r\n    const dayOfWeek = date.toLocaleDateString('en-US', options);\r\n    const dayOfMonth = date.getDate();\r\n    return { dayOfWeek, dayOfMonth };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center justify-between\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">Meal Planner</h1>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={goToPreviousWeek}\r\n            className=\"p-2 rounded-lg hover:bg-gray-100\"\r\n          >\r\n            <ChevronLeft className=\"w-5 h-5 text-gray-600\" />\r\n          </button>\r\n          <span className=\"font-medium\">\r\n            {weekDates[0].toLocaleDateString('en-US', { month: 'short', day: 'numeric' })} -{' '}\r\n            {weekDates[6].toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}\r\n          </span>\r\n          <button\r\n            onClick={goToNextWeek}\r\n            className=\"p-2 rounded-lg hover:bg-gray-100\"\r\n          >\r\n            <ChevronRight className=\"w-5 h-5 text-gray-600\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Date selector */}\r\n      <div className=\"flex justify-between\">\r\n        {weekDates.map((date, index) => {\r\n          const { dayOfWeek, dayOfMonth } = formatDate(date);\r\n          return (\r\n            <button\r\n              key={index}\r\n              onClick={() => setCurrentDate(date)}\r\n              className={`flex flex-col items-center justify-center w-12 h-16 rounded-lg transition-colors ${\r\n                isToday(date)\r\n                  ? 'bg-emerald-500 text-white'\r\n                  : isSelectedDate(date)\r\n                  ? 'bg-emerald-100 text-emerald-800'\r\n                  : 'hover:bg-gray-100'\r\n              }`}\r\n            >\r\n              <span className=\"text-xs font-medium\">{dayOfWeek}</span>\r\n              <span className=\"text-lg\">{dayOfMonth}</span>\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeekDateSelector;\r\n","\r\nimport React from 'react';\r\nimport { Edit, Trash2 } from 'lucide-react';\r\n\r\ninterface Meal {\r\n  name: string;\r\n  calories: number;\r\n  protein: number;\r\n  carbs: number;\r\n  fat: number;\r\n}\r\n\r\ninterface MealItemProps {\r\n  meal: Meal;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n}\r\n\r\nconst MealItem: React.FC<MealItemProps> = ({ meal, onEdit, onDelete }) => {\r\n  return (\r\n    <div className=\"bg-gray-50 rounded-lg p-4\">\r\n      <div className=\"flex justify-between\">\r\n        <div>\r\n          <h4 className=\"font-medium\">{meal.name}</h4>\r\n          <div className=\"flex mt-2 space-x-4 text-sm text-gray-500\">\r\n            <span>{meal.calories} cal</span>\r\n            <span>{meal.protein}g protein</span>\r\n            <span>{meal.carbs}g carbs</span>\r\n            <span>{meal.fat}g fat</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex space-x-2\">\r\n          {onEdit && (\r\n            <button \r\n              onClick={onEdit}\r\n              className=\"p-1 text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <Edit className=\"w-4 h-4\" />\r\n            </button>\r\n          )}\r\n          {onDelete && (\r\n            <button \r\n              onClick={onDelete}\r\n              className=\"p-1 text-gray-400 hover:text-red-500\"\r\n            >\r\n              <Trash2 className=\"w-4 h-4\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealItem;\r\n","\r\nimport React from 'react';\r\nimport { Calendar, Plus } from 'lucide-react';\r\n\r\ninterface EmptyMealProps {\r\n  mealType: string;\r\n  onAddMeal: () => void;\r\n}\r\n\r\nconst EmptyMeal: React.FC<EmptyMealProps> = ({ mealType, onAddMeal }) => {\r\n  return (\r\n    <div className=\"text-center py-8 bg-gray-50 rounded-lg\">\r\n      <Calendar className=\"w-12 h-12 mx-auto text-gray-300\" />\r\n      <p className=\"mt-2 text-gray-500\">No {mealType} planned</p>\r\n      <button\r\n        onClick={onAddMeal}\r\n        className=\"mt-3 text-emerald-600 hover:text-emerald-700 font-medium text-sm inline-flex items-center\"\r\n      >\r\n        <Plus className=\"w-4 h-4 mr-1\" />\r\n        Add meal\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyMeal;\r\n","\r\nimport React from 'react';\r\nimport { Plus } from 'lucide-react';\r\nimport MealItem from './MealItem';\r\nimport EmptyMeal from './EmptyMeal';\r\n\r\ninterface Meal {\r\n  name: string;\r\n  calories: number;\r\n  protein: number;\r\n  carbs: number;\r\n  fat: number;\r\n}\r\n\r\ninterface MealSectionProps {\r\n  title: string;\r\n  meal: Meal | null;\r\n  onAddMeal: () => void;\r\n  mealType: string;\r\n}\r\n\r\nconst MealSection: React.FC<MealSectionProps> = ({ title, meal, onAddMeal, mealType }) => {\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h3 className=\"font-medium text-gray-800\">{title}</h3>\r\n        <button\r\n          onClick={onAddMeal}\r\n          className=\"text-emerald-600 hover:text-emerald-700 text-sm font-medium flex items-center\"\r\n        >\r\n          <Plus className=\"w-4 h-4 mr-1\" />\r\n          Add {title}\r\n        </button>\r\n      </div>\r\n\r\n      {meal ? (\r\n        <MealItem meal={meal} />\r\n      ) : (\r\n        <EmptyMeal mealType={mealType.toLowerCase()} onAddMeal={onAddMeal} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealSection;\r\n","\r\nimport React from 'react';\r\nimport { Plus } from 'lucide-react';\r\nimport MealItem from './MealItem';\r\nimport EmptyMeal from './EmptyMeal';\r\n\r\ninterface Snack {\r\n  name: string;\r\n  calories: number;\r\n  protein: number;\r\n  carbs: number;\r\n  fat: number;\r\n}\r\n\r\ninterface SnacksSectionProps {\r\n  snacks: Snack[];\r\n  onAddSnack: () => void;\r\n}\r\n\r\nconst SnacksSection: React.FC<SnacksSectionProps> = ({ snacks, onAddSnack }) => {\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h3 className=\"font-medium text-gray-800\">Snacks</h3>\r\n        <button\r\n          onClick={onAddSnack}\r\n          className=\"text-emerald-600 hover:text-emerald-700 text-sm font-medium flex items-center\"\r\n        >\r\n          <Plus className=\"w-4 h-4 mr-1\" />\r\n          Add Snack\r\n        </button>\r\n      </div>\r\n\r\n      {snacks && snacks.length > 0 ? (\r\n        <div className=\"space-y-3\">\r\n          {snacks.map((snack, index) => (\r\n            <MealItem key={index} meal={snack} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <EmptyMeal mealType=\"snacks\" onAddMeal={onAddSnack} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnacksSection;\r\n","\r\nimport React from 'react';\r\n\r\ninterface MealPlan {\r\n  breakfast: {\r\n    name: string;\r\n    calories: number;\r\n    protein: number;\r\n    carbs: number;\r\n    fat: number;\r\n  } | null;\r\n  lunch: {\r\n    name: string;\r\n    calories: number;\r\n    protein: number;\r\n    carbs: number;\r\n    fat: number;\r\n  } | null;\r\n  dinner: {\r\n    name: string;\r\n    calories: number;\r\n    protein: number;\r\n    carbs: number;\r\n    fat: number;\r\n  } | null;\r\n  snacks: {\r\n    name: string;\r\n    calories: number;\r\n    protein: number;\r\n    carbs: number;\r\n    fat: number;\r\n  }[];\r\n}\r\n\r\ninterface NutritionSummaryProps {\r\n  mealPlan: MealPlan;\r\n}\r\n\r\nconst NutritionSummary: React.FC<NutritionSummaryProps> = ({ mealPlan }) => {\r\n  // Calculate total calories\r\n  const totalCalories = \r\n    (mealPlan.breakfast?.calories || 0) +\r\n    (mealPlan.lunch?.calories || 0) +\r\n    (mealPlan.dinner?.calories || 0) +\r\n    (mealPlan.snacks?.reduce((sum, snack) => sum + snack.calories, 0) || 0);\r\n\r\n  // Calculate total protein\r\n  const totalProtein =\r\n    (mealPlan.breakfast?.protein || 0) +\r\n    (mealPlan.lunch?.protein || 0) +\r\n    (mealPlan.dinner?.protein || 0) +\r\n    (mealPlan.snacks?.reduce((sum, snack) => sum + snack.protein, 0) || 0);\r\n\r\n  // Calculate total carbs\r\n  const totalCarbs =\r\n    (mealPlan.breakfast?.carbs || 0) +\r\n    (mealPlan.lunch?.carbs || 0) +\r\n    (mealPlan.dinner?.carbs || 0) +\r\n    (mealPlan.snacks?.reduce((sum, snack) => sum + snack.carbs, 0) || 0);\r\n\r\n  // Calculate total fat\r\n  const totalFat =\r\n    (mealPlan.breakfast?.fat || 0) +\r\n    (mealPlan.lunch?.fat || 0) +\r\n    (mealPlan.dinner?.fat || 0) +\r\n    (mealPlan.snacks?.reduce((sum, snack) => sum + snack.fat, 0) || 0);\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-sm p-6\">\r\n      <h2 className=\"font-semibold text-lg text-gray-800 mb-4\">Nutrition Summary</h2>\r\n      \r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n        <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\r\n          <p className=\"text-sm text-gray-500 mb-1\">Calories</p>\r\n          <p className=\"text-xl font-semibold\">\r\n            {totalCalories} <span className=\"text-sm text-gray-500\">kcal</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\r\n          <p className=\"text-sm text-gray-500 mb-1\">Protein</p>\r\n          <p className=\"text-xl font-semibold\">\r\n            {totalProtein} <span className=\"text-sm text-gray-500\">g</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\r\n          <p className=\"text-sm text-gray-500 mb-1\">Carbs</p>\r\n          <p className=\"text-xl font-semibold\">\r\n            {totalCarbs} <span className=\"text-sm text-gray-500\">g</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\r\n          <p className=\"text-sm text-gray-500 mb-1\">Fat</p>\r\n          <p className=\"text-xl font-semibold\">\r\n            {totalFat} <span className=\"text-sm text-gray-500\">g</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NutritionSummary;\r\n","\r\nimport React from 'react';\r\nimport { Search } from 'lucide-react';\r\n\r\ninterface AddMealFormProps {\r\n  selectedMealType: string;\r\n  onClose: () => void;\r\n  onSubmit: (e: React.FormEvent) => void;\r\n}\r\n\r\nconst AddMealForm: React.FC<AddMealFormProps> = ({ \r\n  selectedMealType, \r\n  onClose, \r\n  onSubmit \r\n}) => {\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md mx-4\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">\r\n            Add {selectedMealType.charAt(0).toUpperCase() + selectedMealType.slice(1)}\r\n          </h3>\r\n        </div>\r\n\r\n        <form onSubmit={onSubmit} className=\"p-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Search for a recipe:\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"block w-full pl-3 pr-10 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-emerald-500 focus:border-emerald-500\"\r\n                  placeholder=\"Type to search...\"\r\n                />\r\n                <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\r\n                  <Search className=\"h-5 w-5 text-gray-400\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Or add custom meal:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-emerald-500 focus:border-emerald-500\"\r\n                placeholder=\"Meal name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Calories\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-emerald-500 focus:border-emerald-500\"\r\n                  placeholder=\"kcal\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Protein\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-emerald-500 focus:border-emerald-500\"\r\n                  placeholder=\"grams\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Carbs\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-emerald-500 focus:border-emerald-500\"\r\n                  placeholder=\"grams\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Fat\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-emerald-500 focus:border-emerald-500\"\r\n                  placeholder=\"grams\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6 flex justify-end space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 bg-white border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 py-2 bg-emerald-600 border border-transparent rounded-md text-sm font-medium text-white hover:bg-emerald-700\"\r\n            >\r\n              Add Meal\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMealForm;\r\n","\r\n// Function to get the formatted date key\r\nexport const getDateKey = (date: Date) => {\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\n// Function to generate dates for the weekly view\r\nexport const getWeekDates = (currentDate: Date) => {\r\n  const dates = [];\r\n  const currentDay = currentDate.getDay(); // 0 = Sunday, 1 = Monday, etc.\r\n  const firstDayOfWeek = new Date(currentDate);\r\n  firstDayOfWeek.setDate(currentDate.getDate() - currentDay);\r\n\r\n  for (let i = 0; i < 7; i++) {\r\n    const date = new Date(firstDayOfWeek);\r\n    date.setDate(firstDayOfWeek.getDate() + i);\r\n    dates.push(date);\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\n// Interface for meal data\r\nexport interface Meal {\r\n  name: string;\r\n  calories: number;\r\n  protein: number;\r\n  carbs: number;\r\n  fat: number;\r\n}\r\n\r\n// Interface for daily meal plan\r\nexport interface DailyMealPlan {\r\n  breakfast: Meal | null;\r\n  lunch: Meal | null;\r\n  dinner: Meal | null;\r\n  snacks: Meal[];\r\n}\r\n\r\n// Mock data for initial meal plan\r\nexport const mockMealPlan: Record<string, DailyMealPlan> = {\r\n  '2023-05-15': {\r\n    breakfast: {\r\n      name: 'Greek Yogurt Bowl',\r\n      calories: 320,\r\n      protein: 22,\r\n      carbs: 40,\r\n      fat: 8,\r\n    },\r\n    lunch: {\r\n      name: 'Quinoa Salad with Grilled Chicken',\r\n      calories: 450,\r\n      protein: 35,\r\n      carbs: 45,\r\n      fat: 15,\r\n    },\r\n    dinner: {\r\n      name: 'Salmon with Roasted Vegetables',\r\n      calories: 580,\r\n      protein: 42,\r\n      carbs: 30,\r\n      fat: 28,\r\n    },\r\n    snacks: [\r\n      {\r\n        name: 'Apple with Almond Butter',\r\n        calories: 200,\r\n        protein: 5,\r\n        carbs: 25,\r\n        fat: 10,\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\n// Get empty meal plan structure\r\nexport const getEmptyMealPlan = (): DailyMealPlan => {\r\n  return {\r\n    breakfast: null,\r\n    lunch: null,\r\n    dinner: null,\r\n    snacks: [],\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Calendar, Filter, Plus } from 'lucide-react';\r\nimport RecipeCard from '../components/recipes/RecipeCard';\r\nimport type { Recipe } from '../types';\r\nimport WeekDateSelector from '../components/meal-planner/WeekDateSelector';\r\nimport MealSection from '../components/meal-planner/MealSection';\r\nimport SnacksSection from '../components/meal-planner/SnacksSection';\r\nimport NutritionSummary from '../components/meal-planner/NutritionSummary';\r\nimport AddMealForm from '../components/meal-planner/AddMealForm';\r\nimport { \r\n  getDateKey, \r\n  getWeekDates, \r\n  mockMealPlan, \r\n  getEmptyMealPlan,\r\n  DailyMealPlan\r\n} from '../components/meal-planner/mealPlannerUtils';\r\n\r\nconst MOCK_RECIPES: Recipe[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Quinoa Buddha Bowl',\r\n    description: 'A nutritious bowl packed with protein-rich quinoa, roasted vegetables, and tahini dressing',\r\n    ingredients: [],\r\n    instructions: [],\r\n    prepTime: 15,\r\n    cookTime: 25,\r\n    servings: 2,\r\n    nutrients: {\r\n      calories: 450,\r\n      protein: 15,\r\n      carbs: 65,\r\n      fat: 18,\r\n      micronutrients: {}\r\n    },\r\n    image: '/mock/buddha-bowl.jpg',\r\n    tags: ['Vegetarian', 'High Protein', 'Gluten Free']\r\n  },\r\n  // Add more mock recipes as needed\r\n];\r\n\r\nconst MealPlanner: React.FC = () => {\r\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\r\n  const [activeFilters, setActiveFilters] = useState<string[]>([]);\r\n  const [showAddMealForm, setShowAddMealForm] = useState(false);\r\n  const [selectedMealType, setSelectedMealType] = useState('breakfast');\r\n\r\n  const handleRecipeSelect = (recipe: Recipe) => {\r\n    console.log('Selected recipe:', recipe);\r\n    // Implement recipe selection logic\r\n  };\r\n\r\n  // Function to get meal plan for current date\r\n  const getCurrentMealPlan = (): DailyMealPlan => {\r\n    const dateKey = getDateKey(selectedDate);\r\n    return mockMealPlan[dateKey as keyof typeof mockMealPlan] || getEmptyMealPlan();\r\n  };\r\n\r\n  const weekDates = getWeekDates(selectedDate);\r\n  const currentMealPlan = getCurrentMealPlan();\r\n\r\n  // Function to navigate to previous week\r\n  const goToPreviousWeek = () => {\r\n    const newDate = new Date(selectedDate);\r\n    newDate.setDate(selectedDate.getDate() - 7);\r\n    setSelectedDate(newDate);\r\n  };\r\n\r\n  // Function to navigate to next week\r\n  const goToNextWeek = () => {\r\n    const newDate = new Date(selectedDate);\r\n    newDate.setDate(selectedDate.getDate() + 7);\r\n    setSelectedDate(newDate);\r\n  };\r\n\r\n  // Handler for showing add meal form\r\n  const handleShowAddMealForm = (mealType: string) => {\r\n    setSelectedMealType(mealType);\r\n    setShowAddMealForm(true);\r\n  };\r\n\r\n  // Mock function to add a meal\r\n  const handleAddMeal = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // Would implement actual meal adding logic here\r\n    setShowAddMealForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Meal Planner</h1>\r\n        <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center\">\r\n          <Plus className=\"w-5 h-5 mr-2\" />\r\n          Add Custom Recipe\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          <div className=\"bg-white p-6 rounded-xl shadow-sm\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h2 className=\"text-lg font-medium text-gray-900\">\r\n                Recommended Recipes\r\n              </h2>\r\n              <button className=\"flex items-center text-gray-500 hover:text-gray-700\">\r\n                <Filter className=\"w-5 h-5 mr-2\" />\r\n                Filter\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {MOCK_RECIPES.map(recipe => (\r\n                <RecipeCard\r\n                  key={recipe.id}\r\n                  recipe={recipe}\r\n                  onSelect={handleRecipeSelect}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white p-6 rounded-xl shadow-sm\">\r\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n              Nutrient Goals Progress\r\n            </h2>\r\n            <div className=\"space-y-4\">\r\n              {['Protein', 'Carbs', 'Fats', 'Fiber'].map(nutrient => (\r\n                <div key={nutrient} className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span className=\"text-gray-500\">{nutrient}</span>\r\n                    <span className=\"font-medium\">70%</span>\r\n                  </div>\r\n                  <div className=\"h-2 bg-gray-100 rounded-full\">\r\n                    <div\r\n                      className=\"h-2 bg-blue-500 rounded-full\"\r\n                      style={{ width: '70%' }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-6 rounded-xl shadow-sm\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h2 className=\"text-lg font-medium text-gray-900\">Meal Schedule</h2>\r\n            <button className=\"text-blue-600 hover:text-blue-700\">\r\n              <Calendar className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            {['Breakfast', 'Lunch', 'Dinner', 'Snacks'].map(mealTime => (\r\n              <div\r\n                key={mealTime}\r\n                className=\"p-4 border border-dashed border-gray-300 rounded-lg\"\r\n              >\r\n                <h3 className=\"text-sm font-medium text-gray-700 mb-2\">\r\n                  {mealTime}\r\n                </h3>\r\n                <button className=\"flex items-center text-blue-600 hover:text-blue-700 text-sm\">\r\n                  <Plus className=\"w-4 h-4 mr-1\" />\r\n                  Add Meal\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <WeekDateSelector \r\n        weekDates={weekDates}\r\n        currentDate={selectedDate}\r\n        setCurrentDate={setSelectedDate}\r\n        goToPreviousWeek={goToPreviousWeek}\r\n        goToNextWeek={goToNextWeek}\r\n      />\r\n\r\n      {/* Meal plan for selected date */}\r\n      <div className=\"bg-white rounded-xl shadow-sm overflow-hidden\">\r\n        <div className=\"px-6 py-4 bg-emerald-50 border-b border-emerald-100\">\r\n          <h2 className=\"font-semibold text-lg text-gray-800\">\r\n            {selectedDate.toLocaleDateString('en-US', {\r\n              weekday: 'long',\r\n              month: 'long',\r\n              day: 'numeric',\r\n              year: 'numeric',\r\n            })}\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"divide-y divide-gray-100\">\r\n          <MealSection\r\n            title=\"Breakfast\"\r\n            meal={currentMealPlan.breakfast}\r\n            onAddMeal={() => handleShowAddMealForm('breakfast')}\r\n            mealType=\"Breakfast\"\r\n          />\r\n\r\n          <MealSection\r\n            title=\"Lunch\"\r\n            meal={currentMealPlan.lunch}\r\n            onAddMeal={() => handleShowAddMealForm('lunch')}\r\n            mealType=\"Lunch\"\r\n          />\r\n\r\n          <MealSection\r\n            title=\"Dinner\"\r\n            meal={currentMealPlan.dinner}\r\n            onAddMeal={() => handleShowAddMealForm('dinner')}\r\n            mealType=\"Dinner\"\r\n          />\r\n\r\n          <SnacksSection\r\n            snacks={currentMealPlan.snacks}\r\n            onAddSnack={() => handleShowAddMealForm('snack')}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <NutritionSummary mealPlan={currentMealPlan} />\r\n\r\n      {/* Add Meal Modal */}\r\n      {showAddMealForm && (\r\n        <AddMealForm\r\n          selectedMealType={selectedMealType}\r\n          onClose={() => setShowAddMealForm(false)}\r\n          onSubmit={handleAddMeal}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealPlanner;\r\n"],"names":["PenSquare","createLucideIcon","d","key","Trash2","x1","x2","y1","y2","RecipeCard","recipe","showNutrients","onSelect","name","description","prepTime","cookTime","servings","nutrients","image","totalTime","jsxRuntimeExports","jsxs","className","onClick","children","jsx","src","alt","calories","protein","carbs","fat","ChevronRight","Clock","Users","tags","length","map","tag","WeekDateSelector","weekDates","currentDate","setCurrentDate","goToPreviousWeek","goToNextWeek","isToday","date","today","Date","getDate","getMonth","getFullYear","isSelectedDate","Fragment","ChevronLeft","toLocaleDateString","month","day","year","index","dayOfWeek","dayOfMonth","weekday","formatDate","MealItem","meal","onEdit","onDelete","Edit","EmptyMeal","mealType","onAddMeal","Calendar","Plus","MealSection","title","toLowerCase","SnacksSection","snacks","onAddSnack","snack","NutritionSummary","mealPlan","totalCalories","_a","breakfast","_b","lunch","_c","dinner","_d","reduce","sum","totalProtein","_e","_f","_g","_h","totalCarbs","_i","_j","_k","_l","totalFat","_m","_n","_o","_p","AddMealForm","selectedMealType","onClose","onSubmit","charAt","toUpperCase","slice","type","placeholder","Search","mockMealPlan","MOCK_RECIPES","id","ingredients","instructions","micronutrients","MealPlanner","selectedDate","setSelectedDate","useState","showAddMealForm","setShowAddMealForm","setSelectedMealType","handleRecipeSelect","console","log","dates","currentDay","getDay","firstDayOfWeek","setDate","i","push","getWeekDates","currentMealPlan","dateKey","toISOString","split","getCurrentMealPlan","handleShowAddMealForm","Filter","nutrient","style","width","mealTime","newDate","e","preventDefault"],"mappings":"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","x_google_ignoreList":[0,1]}